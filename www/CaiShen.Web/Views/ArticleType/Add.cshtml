@model Pannet.Models.ArticleType
@using Pannet.DAL
@using Pannet.Utility

@{
    ViewBag.Title = "文章类型 ";
    List<Pannet.Models.ArticleType> listParentType = ViewBag.Parents as List<Pannet.Models.ArticleType>;
}

<div class="page-content">
    <div class="page-header">
        <h1>
            <span id="lblTitle">文章类型 </span>
            <small>
                <i class="icon-double-angle-right"></i>
                @if (Model != null && Request.RequestContext.RouteData.Values["ID"] != null)
                {
                    <span>编辑 </span>
                }
                else
                {
                    <span>新增</span>
                }
            </small>
        </h1>
    </div>


    @using (Html.BeginForm("Add", "ArticleType", FormMethod.Post))
    { 
        @Html.ValidationSummary(true)
        @Html.Raw(ViewBag.MessageInfo)
        //@Html.HiddenFor(m => m.ID, new { @value = ViewBag.ID })

        <table class="table table-striped table-hover">
            <tbody>
                <tr>
                    <td width="120"><font color="red">*</font>@Html.LabelFor(m => m.AT_Name)： </td>
                    <td>
                        @Html.TextBoxFor(m => m.AT_Name, new { @class = "input-text" })
                        @Html.ValidationMessageFor(m => m.AT_Name)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.AT_ParentID)： </td>
                    <td>
                        <select name="AT_ParentID">
                            <option value="0">做为一级类型 </option>
                            @{
        if (listParentType != null && listParentType.Count() > 0)
        {
            foreach (var item in listParentType)
            {
                if (Model != null && Model.AT_ParentID == item.ID)
                { 
                                <option value="@item.ID" selected="selected">@item.AT_Name</option>
                }
                else
                {
                                <option value="@item.ID">@item.AT_Name</option>
                }
            }
        }
                            }
                        </select>
                        @Html.ValidationMessageFor(m => m.AT_ParentID)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.AT_Desc)： </td>
                    <td>
                        @Html.TextAreaFor(m => m.AT_Desc, new { @class = "input-text", style = "width:500px;height:150px;" })
                        @Html.ValidationMessageFor(m => m.AT_Desc)
                    </td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(m => m.AT_IsRecommend)： </td>
                    <td>
                        <select name="AT_IsRecommend" id="AT_IsRecommend">
                            @foreach (var item in DataConfig.YesOrNo)
                            {
                                <option value="@item.Value" @(Model != null && item.Value == Model.AT_IsRecommend.ToString() ? " selected='selected'" : "")>@item.Name</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(m => m.AT_IsRecommend)
                    </td>
                </tr>

                <tr>
                    <td>@Html.LabelFor(m => m.AT_IsEnable)： </td>
                    <td>
                        <select name="AT_IsEnable" id="AT_IsEnable">
                            @foreach (var item in DataConfig.YesOrNo)
                            {
                                <option value="@item.Value" @(Model != null && item.Value == Model.AT_IsEnable.ToString() ? " selected='selected'" : "")>@item.Name</option>
                            }
                        </select>
                        @Html.ValidationMessageFor(m => m.AT_IsEnable)
                    </td>
                </tr>


                <tr>
                    <td>@Html.LabelFor(m => m.AT_Sort)： </td>
                    <td>
                        @Html.TextBoxFor(m => m.AT_Sort, new { @class = "input-text" }) (大->小排序)
                        @Html.ValidationMessageFor(m => m.AT_Sort)
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        <button type="submit" name="btnSubmit" id="btnSubmit" class="btn btn-success"><i class="icon-ok"></i>保存</button>
                    </td>
                </tr>
            </tbody>
        </table>
    }

</div>
